#!/bin/bash
# vim: set ft=sh
set -e -x

BUILD_DIR_PATH=$PWD
GROOTFS_BINS_PATH="$BUILD_DIR_PATH/gfs-github-release"
IDMAPPER_SRC_PATH="$BUILD_DIR_PATH/src/code.cloudfoundry.org/idmapper"

cd $(dirname $0)/../.. # garden-runc-release dir

export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH
export GOPATH=$PWD
export PATH=$GOPATH/bin:$PATH

## *** runc setup *** ##
mkdir -p /var/run/oci
mount -t tmpfs tmpfs /var/run/oci
pushd src/github.com/opencontainers/runc
  GOPATH=$PWD/Godeps/_workspace:$GOPATH go build -tags "seccomp apparmor" --ldflags '-extldflags "-static"' -o runc .
  cp runc /usr/local/bin/runc
popd

## *** apparmor setup *** ##
mount -t securityfs securityfs /sys/kernel/security
if ! aa-status | grep garden-default > /dev/null; then
  apparmor_parser -a ci/assets/garden-default
fi

## *** grootfs setup *** ##
source ci/scripts/snippets/grootfs
mkdir -p /opt/grootfs/bin
sudo_mount_btrfs
GOPATH=$BUILD_DIR_PATH install_idmapper "$IDMAPPER_SRC_PATH"
install_grootfs "$GROOTFS_BINS_PATH"

cd src/code.cloudfoundry.org/guardian

export PATH=/opt/grootfs/bin:$PATH
export GARDEN_TEST_ROOTFS=/opt/warden/rootfs
export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs
export GARDEN_NESTABLE_TEST_ROOTFS=/opt/warden/nestable-rootfs
export GARDEN_TAR_PATH=/opt/tar
export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
export GARDEN_DORA_PATH=$PWD/../garden-integration-tests/resources/dora.tgz
export IMAGE_PLUGIN_PATH=/opt/grootfs/bin/grootfs
[ -d /opt/warden/docker-registry-v2-rootfs ] && export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs

go vet ./...
ginkgo -tags daemon -r -p -race -cover -keepGoing -nodes=4 "$@"
